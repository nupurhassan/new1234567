plugins {
     id "com.github.spotbugs" version "5.2.1"
     id "checkstyle"
}
apply plugin: 'jacoco'
apply plugin: 'application'

application {
    mainClass = 'memoranda.Start'
}

compileJava.options.encoding = 'UTF-8'

test {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test
}
jacoco {
	toolVersion = "0.8.10"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

// Repositories and dependencies for code go here
repositories {
  mavenCentral()
  gradlePluginPortal()
}

dependencies {
  implementation 'com.io7m.xom:xom:1.2.+'
  implementation 'net.sourceforge.nekohtml:nekohtml:1.9.+'
  implementation 'com.auth0:java-jwt:3.18.1'
  implementation 'org.mindrot:jbcrypt:0.4'
  implementation 'org.postgresql:postgresql:42.7.5'
  implementation 'org.json:json:20231013'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
  implementation files('cls/')
}

// // Define the Java source and target compatibility
 java {
     sourceCompatibility = JavaVersion.VERSION_17  // or the version you need
     targetCompatibility = JavaVersion.VERSION_17  // same as above
 }


///////////////////////////////////////////////////////////////////////
// Configure Checkstyle
/////////////////////////////////////////////////////////////////////
 apply plugin: 'checkstyle'
 checkstyle {
   // Keep checkstyle a little quieter
   ignoreFailures = true
   showViolations = false
 }

tasks.withType(Checkstyle) {
}
checkstyle {
    toolVersion = "8.8"
}

///////////////////////////////////////////////////////////////////////
// Configure SpotBugs
///////////////////////////////////////////////////////////////////////
// To generate an HTML report instead of XML
spotbugs {
    toolVersion = '4.8.3'
    ignoreFailures = true
    showProgress = true
    effort = 'max'
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask).configureEach {
    reports {
        html.required.set(true)
        xml.required.set(false)
    }
}
